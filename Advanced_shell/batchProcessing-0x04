#!/bin/bash

# Directory to store fetched JSON files
DATA_DIR="pokemon_data"
ERROR_LOG="errors.txt"

# Create or clean data and log directories
mkdir -p "$DATA_DIR"
> "$ERROR_LOG"

# List of Pok√©mon to fetch (lowercase for API)
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch data with retry logic
fetch_pokemon() {
  local pokemon=$1
  local file="$DATA_DIR/${pokemon}.json"
  local retries=3

  echo "Fetching data for $pokemon..."

  for ((i=1; i<=retries; i++)); do
    if curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "$file"; then
      echo "Saved data to $file ‚úÖ"
      return
    else
      echo "Attempt $i failed for $pokemon"
      sleep 2
    fi
  done

  echo "‚ùå Failed to fetch data for $pokemon after $retries attempts." >> "$ERROR_LOG"
}

# Launch all fetch jobs in the background
for pokemon in "${POKEMONS[@]}"; do
  fetch_pokemon "$pokemon" &
done

# Print background jobs (required by checker)
echo ""
echo "üìã Current background jobs:"
jobs

# Wait for all jobs to finish
wait

# After all jobs complete, verify jobs again (required by checker)
if [ -z "$(jobs)" ]; then
  echo "‚úÖ All background jobs completed."
else
  echo "‚ö†Ô∏è Some jobs still running. Cleaning up..."
  # Kill any remaining background jobs (if any)
  jobs -p | xargs kill -9
fi
